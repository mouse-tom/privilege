<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 扫描业务类 -->
	<context:component-scan base-package="com.mouse.site.service.impl" />

	<!-- 引入配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 读数据源配置 -->
	<bean id="writeDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="driverClassName" value="${write.jdbc.driverClassName}"></property>
		<property name="url" value="${write.jdbc.url}"></property>
		<property name="username" value="${write.jdbc.username}"></property>
		<property name="password" value="${write.jdbc.password}"></property>
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${write.initialSize}" />
		<property name="minIdle" value="${write.minIdle}" />
		<property name="maxActive" value="${write.maxActive}" />
		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${write.maxWait}" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${write.timeBetweenEvictionRunsMillis}" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${write.minEvictableIdleTimeMillis}" />
		<!-- 用来检测连接是否有效 -->
		<property name="validationQuery" value="${write.validationQuery}" />
		<property name="testWhileIdle" value="${write.testWhileIdle}" />
		<property name="testOnBorrow" value="${write.testOnBorrow}" />
		<property name="testOnReturn" value="${write.testOnReturn}" />
		<!-- 关闭PSCache -->
		<property name="poolPreparedStatements" value="${write.poolPreparedStatements}" />
		<!-- 配置监控统计拦截的filters -->
		<!-- <property name="filters" value="wall,stat" /> -->
		<property name="filters" value="stat" />
	</bean>

	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="writeDataSource" />
		<property name="mapperLocations" value="classpath:com/mouse/site/mapper/*.xml" />
		<property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties" >
                        <value>
                            dialect=mysql
                            offsetAsPageNum=true
                            rowBoundsWithCount=true
                            pageSizeZero=truereasonable=false
                            reasonable=true
                            params=pageNum=pageHelperStart;pageSize=pageHelperRows;
                            supportMethodsArguments=false
                        </value>
                    </property>
                </bean>
            </array>
        </property> 
	</bean>

	<!-- 配置扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描com.ysh.o2o.*.dao包以及子包下的所有映射接口类 -->
		<property name="basePackage" value="com.mouse.site.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 配置Spring的事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="writeDataSource" />
	</bean>

	<!-- 注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	

</beans>